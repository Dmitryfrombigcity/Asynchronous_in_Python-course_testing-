Изменения с оригинальным заданием:
1. Поменяны местами контент менеджеры:
 async with thread_executor(n) as thread_pool, asyncio.TaskGroup() as tg:
2. В callback'е два аргумента.

Основная идея -- сделать универсальное решение, чтобы при ошибке в любой
task или future остальные отменялись.
Проблема в том, что thread_pool.shutdown(wait=True) происходит блокировка, сперва выполнятся все
concurrent.futures и только потом callback'и к asyncio.futures. Хорошо видно в логах.
При thread_pool.shutdown(wait=False) блокировки не происходит, однако логика работы сильно зависит от
остальной части программы. Можно включить asyncio.sleep(10) и посмотреть результаты.
При отмене только task ставить wait=True и не волноваться.
При отмене future рассматривать варианты.
Причина --> ThreadPoolExecutor и asyncio.

Краткий вывод и логирование в отдельный файл.
